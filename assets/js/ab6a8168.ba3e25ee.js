"use strict";(self.webpackChunkathenaserving=self.webpackChunkathenaserving||[]).push([[5474],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(f,s(s({ref:n},p),{},{components:t})):r.createElement(f,s({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},84080:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:3,sidebar_label:"\u5b9e\u6218"},s=void 0,o={unversionedId:"\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218",id:"\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218",title:"\u5b9e\u6218",description:"\u914d\u7f6e\u6587\u4ef6",source:"@site/docs/\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218.md",sourceDirName:"\u6570\u636e\u96c6\u6210/Apache Flume",slug:"/\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218",permalink:"/docs/\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218",draft:!1,editUrl:"https://github.com/zhangyongtian/bigdataknowledge/tree/dev/docs/\u6570\u636e\u96c6\u6210/Apache Flume/\u5b9e\u6218.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"\u5b9e\u6218"},sidebar:"docSidebar",previous:{title:"Flume\u4e8b\u52a1",permalink:"/docs/\u6570\u636e\u96c6\u6210/Apache Flume/Flume\u4e8b\u52a1"},next:{title:"Canal",permalink:"/docs/category/canal"}},c={},l=[{value:"\u914d\u7f6e\u6587\u4ef6",id:"\u914d\u7f6e\u6587\u4ef6",level:2},{value:"\u62e6\u622a\u5668\u7684\u4f7f\u7528\u793a\u4f8b",id:"\u62e6\u622a\u5668\u7684\u4f7f\u7528\u793a\u4f8b",level:2},{value:"Flume\u542f\u505c\u6587\u4ef6",id:"flume\u542f\u505c\u6587\u4ef6",level:2}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u914d\u7f6e\u6587\u4ef6"},"\u914d\u7f6e\u6587\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"a1.sources = r1\na1.channels = c1\na1.sinks = k1\n \na1.sources.r1.type = org.apache.flume.source.kafka.KafkaSource\na1.sources.r1.batchSize = 3000\na1.sources.r1.batchDurationMillis = 2000\na1.sources.r1.kafka.bootstrap.servers = ip:9092,ip:9092,ip:9092\n#\u6b63\u5219\u8bfb\u53d6\u6570\u636e\na1.sources.r1.kafka.topics.regex = ^bigdata_demo.*\na1.sources.r1.kafka.consumer.group.id = bigdata_flum3\na1.sources.r1.setTopicHeader = true\na1.sources.r1.topicHeader = topic\na1.sources.r1.interceptors = i1\na1.sources.r1.interceptors.i1.type = com.bigdata.bigdatautil.TimestampFlinkCDCInterceptor$Builder\n#\u7b2c\u4e00\u6b21\u6d88\u8d39\u6240\u6709\u6570\u636e\uff0c\u5982\u679cgroup.id\u6ca1\u6709\u53d8\uff0c\u90a3\u4e48\u5c31\u4ece\u6700\u65b0\u7684\u5730\u65b9\u6d88\u8d39\na1.sources.r1.kafka.consumer.auto.offset.reset=earliest\n \n \na1.channels.c1.type = file\n#\u4fdd\u5b58\u6d88\u8d39\u7684\u4f4d\u7f6e\u4fe1\u606f\na1.channels.c1.checkpointDir = /home/bigdata/module/apache-flume-1.9.0-bin/checkpoint\na1.channels.c1.dataDirs = /home/bigdata/module/apache-flume-1.9.0-bin/data\na1.channels.c1.maxFileSize = 2146435071\na1.channels.c1.capacity = 1123456\na1.channels.c1.keep-alive = 6\n \n## sink1\na1.sinks.k1.type = hdfs\na1.sinks.k1.hdfs.path = /origin_data/db/%{topic}_inc/%Y-%m-%d\na1.sinks.k1.hdfs.round = false\n \n \na1.sinks.k1.hdfs.rollInterval = 800\na1.sinks.k1.hdfs.rollSize = 134217728\na1.sinks.k1.hdfs.rollCount = 0\n \n \na1.sinks.k1.hdfs.fileType = CompressedStream\na1.sinks.k1.hdfs.codeC = gzip\n \n## \u62fc\u88c5\na1.sources.r1.channels = c1\na1.sinks.k1.channel= c1\n")),(0,a.kt)("p",null,"jvm\u76f8\u5173"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"vi flume-env.sh")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'export JAVA_OPTS="-Xms2048m -Xmx2048m"\n')),(0,a.kt)("h2",{id:"\u62e6\u622a\u5668\u7684\u4f7f\u7528\u793a\u4f8b"},"\u62e6\u622a\u5668\u7684\u4f7f\u7528\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'\npublic class TimestampInterceptor implements Interceptor {\n    @Override\n    public void initialize() {\n \n    }\n \n    @Override\n    public Event intercept(Event event) {\n \n        Map<String, String> headers = event.getHeaders();\n        String log = new String(event.getBody(), StandardCharsets.UTF_8);\n \n        JSONObject jsonObject = JSONObject.parseObject(log);\n \n        Long ts = jsonObject.getLong("ts");\n        String database_name = jsonObject.getString("database");\n        String table_name = jsonObject.getString("table");\n \n        //Maxwell\u8f93\u51fa\u7684\u6570\u636e\u4e2d\u7684ts\u5b57\u6bb5\u65f6\u95f4\u6233\u5355\u4f4d\u4e3a\u79d2\uff0cFlume HDFSSink\u8981\u6c42\u5355\u4f4d\u4e3a\u6beb\u79d2\n        String timeMills = String.valueOf(ts * 1000);\n \n \n        headers.put("timestamp", timeMills);\n        headers.put("database_name",database_name);\n        headers.put("table_name",table_name);\n        return event;\n \n    }\n \n    @Override\n    public List<Event> intercept(List<Event> events) {\n \n        for (Event event : events) {\n            intercept(event);\n        }\n \n        return events;\n    }\n \n    @Override\n    public void close() {\n \n    }\n \n    public static class Builder implements Interceptor.Builder {\n \n \n        @Override\n        public Interceptor build() {\n            return new TimestampInterceptor();\n        }\n \n        @Override\n        public void configure(Context context) {\n \n        }\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u5c06\u6253\u597d\u7684\u5305\u653e\u5165/opt/module/flume/lib\u6587\u4ef6\u5939\u4e0b\nflume-interceptor-1.0-SNAPSHOT-jar-with-dependencies.jar\n")),(0,a.kt)("h2",{id:"flume\u542f\u505c\u6587\u4ef6"},"Flume\u542f\u505c\u6587\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/bash\n \ncase $1 in\n"start")\n        echo " --------\u542f\u52a8 abs3 flume-------"\n        ssh master2 "nohup /home/bigdata/module/apache-flume-1.9.0-bin/bin/flume-ng agent -n a1 -c /home/bigdata/module/apache-flume-1.9.0-bin/conf -f /home/bigdata/module/apache-flume-1.9.0-bin/conf/kafka_to_hdfs.conf >/dev/null 2>&1 &"\n;;\n"stop")\n \n        echo " --------\u542f\u52a8 \u5173\u95ed flume-------"\n        ssh master2 "ps -ef | grep kafka_to_hdfs.conf | grep -v grep |awk \'{print \\$2}\' | xargs -n1 kill"\n;;\nesac\n')))}d.isMDXComponent=!0}}]);